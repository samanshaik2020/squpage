"use client"

import { Button } from "@/components/ui/button"
import { Card, CardContent } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import Link from "next/link"
import Image from "next/image"
import { Wand2 } from "lucide-react"
import React from "react"

const templates = [
  {
    id: "elementor-basic",
    name: "Elementor Basic",
    category: "Elementor",
    description: "Create your own page from scratch with our drag-and-drop Elementor editor",
    image: "/placeholder.svg?height=300&width=400&text=Elementor+Basic",
    tags: ["Elementor", "Drag & Drop", "Free"],
    isPremium: false,
    isLocked: false,
    isElementor: true
  },
  {
    id: "elementor-pro",
    name: "Elementor Pro",
    category: "Elementor",
    description: "Advanced drag-and-drop editor with premium elements and features",
    image: "/placeholder.svg?height=300&width=400&text=Elementor+Pro",
    tags: ["Elementor", "Drag & Drop", "Premium"],
    isPremium: true,
    isLocked: false,
    isElementor: true
  },
  {
    id: "saas-landing",
    name: "SaaS Landing Page",
    category: "Business",
    description: "Complete SaaS product landing page with pricing, features, and testimonials",
    image: "/placeholder.svg?height=300&width=400&text=SaaS+Landing+Page",
    tags: ["SaaS", "Business", "Conversion"],
    isPremium: false,
    isLocked: false,
  },
  {
    id: "portfolio",
    name: "Portfolio Website",
    category: "Portfolio",
    description: "Professional portfolio showcasing projects, skills, and experience",
    image: "/placeholder.svg?height=300&width=400&text=Portfolio+Website",
    tags: ["Portfolio", "Creative", "Professional"],
    isPremium: false,
    isLocked: false,
  },
  {
    id: "septiclean",
    name: "SeptiClean Landing",
    category: "Business",
    description: "Service-based landing page with video, testimonials, and strong CTAs",
    image: "/placeholder.svg?height=300&width=400&text=SeptiClean+Landing",
    tags: ["Service", "Local Business", "Conversion"],
    isPremium: false,
    isLocked: false,
  },
  {
    id: "startup-landing",
    name: "Startup Landing",
    category: "Business",
    description: "Convert visitors into customers with this landing page",
    image: "/placeholder.svg?height=300&width=400&text=Startup+Landing",
    tags: ["Conversion", "Modern", "CTA"],
    isPremium: false,
    isLocked: false,
  },
  {
    id: "ebook-landing",
    name: "Ebook Landing Page",
    category: "Marketing",
    description: "Capture leads with a high-converting ebook landing page",
    image: "/placeholder.svg?height=300&width=400&text=Ebook+Landing+Page",
    tags: ["Ebook", "Lead Gen", "Marketing"],
    isPremium: false,
    isLocked: false,
  },
  {
    id: "dental-health-landing",
    name: "Dental Health Landing",
    category: "Business",
    description: "Health product landing page with testimonials and scientific backing",
    image: "/placeholder.svg?height=300&width=400&text=Dental+Health+Landing",
    tags: ["Health", "Product", "Testimonials"],
    isPremium: false,
    isLocked: false,
  },
  {
    id: "ai-generated-blog-post",
    name: "AI Blog Post",
    category: "Content",
    description: "Generate a full blog post with AI based on your topic.",
    image: "/placeholder.svg?height=300&width=400&text=AI+Blog+Post",
    tags: ["AI", "Content", "Premium"],
    isPremium: true,
    isLocked: false, // Set to false to unlock it
  },
  {
    id: "product-landing-page",
    name: "Product Landing Page",
    category: "Marketing",
    description: "Generate a customized landing page for any product with AI.",
    image: "/placeholder.svg?height=300&width=400&text=Product+Landing+Page",
    tags: ["AI", "Marketing", "Product", "Premium"],
    isPremium: true,
    isLocked: false,
  },
  {
    id: "ai-portfolio",
    name: "AI Portfolio",
    category: "Portfolio",
    description: "Generate a professional portfolio showcasing your skills and projects with AI.",
    image: "/placeholder.svg?height=300&width=400&text=AI+Portfolio",
    tags: ["AI", "Portfolio", "Professional", "Premium"],
    isPremium: true,
    isLocked: false,
  },
  {
    id: "ai-blog-page",
    name: "AI Blog Page",
    category: "Content",
    description: "Create a complete blog page with multiple posts generated by AI.",
    image: "/placeholder.svg?height=300&width=400&text=AI+Blog+Page",
    tags: ["AI", "Blog", "Content", "Premium"],
    isPremium: true,
    isLocked: false,
  },
  {
    id: "ai-dental-health-landing",
    name: "AI Health Product Landing",
    category: "Business",
    description: "Generate a health product landing page with AI-powered content and testimonials.",
    image: "/placeholder.svg?height=300&width=400&text=AI+Health+Product",
    tags: ["AI", "Health", "Product", "Premium"],
    isPremium: true,
    isLocked: false,
  },
  {
    id: "marketing-lead-generation",
    name: "Marketing & Lead Generation",
    category: "Marketing",
    description: "Showcase of powerful lead generation widgets including lead magnets, multi-step forms, and newsletter signups.",
    image: "/placeholder.svg?height=300&width=400&text=Marketing+Lead+Gen",
    tags: ["Marketing", "Lead Gen", "Forms", "Premium"],
    isPremium: true,
    isLocked: false,
    isElementor: true,
    isMarketing: true
  },
]

const categories = ["All", "Elementor", "Marketing", "Free", "Paid"]

export default function TemplatesPage() {
  const [selectedCategory, setSelectedCategory] = React.useState("All")
  
  // Filter templates based on selected category
  const filteredTemplates = templates.filter(template => 
    selectedCategory === "All" || 
    selectedCategory === "Elementor" && template.isElementor ||
    selectedCategory === "Marketing" && (template.category === "Marketing" || template.isMarketing) ||
    selectedCategory === "Free" && !template.isPremium ||
    selectedCategory === "Paid" && template.isPremium
  )

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Navigation */}
      <nav className="border-b bg-white sticky top-0 z-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center h-16">
            <Link href="/" className="flex items-center space-x-2 text-gray-600 hover:text-gray-900">
              <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
              </svg>
              <span>Back to Home</span>
            </Link>
            <div className="flex items-center space-x-2">
              <div className="w-8 h-8 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg flex items-center justify-center">
                <span className="text-white font-bold text-sm">S</span>
              </div>
              <span className="text-xl font-bold text-gray-900">SiteBuilder</span>
            </div>
          </div>
        </div>
      </nav>

      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        {/* Header */}
        <div className="text-center mb-12">
          <h1 className="text-4xl font-bold text-gray-900 mb-4">Choose Your Template</h1>
          <p className="text-xl text-gray-600 max-w-2xl mx-auto">
            Start with a professionally designed template and customize every element to match your vision
          </p>
        </div>

        {/* Category Filter */}
        <div className="flex flex-wrap justify-center gap-2 mb-12">
          {categories.map((category) => (
            <Button
              key={category}
              variant={category === selectedCategory ? "default" : "outline"}
              size="sm"
              className="rounded-full"
              onClick={() => setSelectedCategory(category)}
            >
              {category}
            </Button>
          ))}
        </div>

        {/* All Templates Section */}
        <h2 className="text-3xl font-bold text-gray-900 mb-8 text-center">
          {selectedCategory === "All" ? "All Templates" : `${selectedCategory} Templates`}
        </h2>
        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8 mb-16">
          {filteredTemplates.map((template) => (
            <Card
              key={template.id}
              className={`group hover:shadow-xl transition-all duration-300 border-0 shadow-lg overflow-hidden relative ${template.isPremium ? 'bg-gradient-to-r from-purple-50 to-blue-50' : ''} ${template.isElementor ? 'border-l-4 border-blue-500' : ''}`}
            >
              <div className="relative">
                <Image
                  src={template.image || "/placeholder.svg"}
                  alt={template.name}
                  width={400}
                  height={300}
                  className="w-full h-48 object-cover"
                />
                {template.isPremium && (
                  <div className="absolute top-3 right-3 bg-gradient-to-r from-purple-500 to-blue-500 text-white px-2 py-1 rounded-full text-xs font-medium flex items-center space-x-1">
                    <svg className="w-3 h-3" fill="currentColor" viewBox="0 0 20 20">
                      <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                    </svg>
                    <span>AI</span>
                  </div>
                )}
                <div className="absolute inset-0 bg-black/50 opacity-0 group-hover:opacity-100 transition-opacity flex items-center justify-center space-x-4">
                  <Link href={`/preview/${template.id}`}>
                    <Button size="sm" variant="secondary">
                      <svg className="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path
                          strokeLinecap="round"
                          strokeLinejoin="round"
                          strokeWidth={2}
                          d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"
                        />
                        <path
                          strokeLinecap="round"
                          strokeLinejoin="round"
                          strokeWidth={2}
                          d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                        />
                      </svg>
                      Preview
                    </Button>
                  </Link>
                  <Link href={`/editor/${template.id}`}>
                    <Button size="sm">
                      <svg className="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path
                          strokeLinecap="round"
                          strokeLinejoin="round"
                          strokeWidth={2}
                          d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"
                        />
                      </svg>
                      Edit
                    </Button>
                  </Link>
                </div>
              </div>

              <CardContent className="p-6">
                <div className="flex items-center justify-between mb-2">
                  <h3 className="text-lg font-semibold text-gray-900">{template.name}</h3>
                  <Badge variant="secondary" className="text-xs">
                    {template.category}
                  </Badge>
                </div>

                <p className="text-gray-600 mb-4 text-sm">{template.description}</p>

                <div className="flex flex-wrap gap-2 mb-4">
                  {template.tags.map((tag) => (
                    <Badge key={tag} variant="outline" className="text-xs">
                      {tag}
                    </Badge>
                  ))}
                </div>

                {template.isElementor ? (
                  <Link href={
                    template.isMarketing 
                      ? `/simplified-elementor?premium=true&marketing=true` 
                      : template.isPremium 
                        ? `/simplified-elementor?premium=true` 
                        : `/simplified-elementor`
                  } className="w-full">
                    <Button className="w-full">
                      <Wand2 className="w-4 h-4 mr-2" />
                      {template.isMarketing ? 'Explore Marketing Features' : template.isPremium ? 'Start Pro Editor' : 'Start Free Editor'}
                    </Button>
                  </Link>
                ) : (
                  <Link href={`/editor/${template.id}`} className="w-full">
                    <Button className={`w-full ${template.isPremium ? 'bg-gradient-to-r from-purple-500 to-blue-500 hover:from-purple-600 hover:to-blue-600' : ''}`}>
                      {template.isPremium ? (
                        <>
                          <svg className="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                          </svg>
                          Generate with AI
                        </>
                      ) : (
                        <>
                          <svg className="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path
                              strokeLinecap="round"
                              strokeLinejoin="round"
                              strokeWidth={2}
                              d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"
                            />
                          </svg>
                          Start Editing
                        </>
                      )}
                    </Button>
                  </Link>
                )}
              </CardContent>
            </Card>
          ))}
        </div>
      </div>
    </div>
  )
}
